#N canvas 520 91 562 658 10;
#X obj 4 630 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020 0;
#X obj 6 230 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 6 498 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 6 594 cnv 3 550 3 empty empty arguments 8 12 0 13 #dcdcdc #000000 0;
#X obj 85 237 cnv 17 3 234 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 85 504 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 167 504 signal;
#X text 179 263 list;
#X obj 85 524 cnv 17 3 17 empty empty 1 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 173 398 pause;
#X text 167 412 resume;
#X text 218 398 - pauses the output, f 53;
#X text 218 504 - envelope signal, f 25;
#X obj 23 40 cnv 4 4 4 empty empty Envelope 0 28 2 18 #e0e0e0 #000000 0;
#X obj 101 40 cnv 4 4 4 empty empty generator 0 28 2 18 #e0e0e0 #000000 0;
#X obj 2 2 cnv 15 301 42 empty empty envgen~ 20 20 2 37 #e0e0e0 #000000 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1;
#X restore 2 3 graph;
#X obj 305 4 cnv 15 250 40 empty empty empty 12 13 0 18 #7c7c7c #e0e4dc 0;
#X obj 344 11 cnv 10 10 10 empty empty ELSE 0 15 2 30 #7c7c7c #e0e4dc 0;
#X obj 457 11 cnv 10 10 10 empty empty EL 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 477 11 cnv 10 10 10 empty empty Locus 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 514 11 cnv 10 10 10 empty empty Solus' 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 463 26 cnv 10 10 10 empty empty ELSE 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 501 26 cnv 10 10 10 empty empty library 0 6 2 13 #7c7c7c #e0e4dc 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 252 42 1 0 0;
#X restore 304 3 graph;
#X text 218 263 -;
#X text 179 250 bang;
#X text 173 524 float;
#X text 219 524 - status: 1 <on> \, 0 <off>;
#N canvas 525 38 476 517 status 0;
#X obj 360 293 switch~;
#X obj 360 225 tgl 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 71 253 *~;
#X obj 49 191 osc~ 440;
#X obj 201 241 else/sig2float~;
#X obj 201 277 vsl 18 100 0 1 0 0 empty empty empty 0 -9 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 289 289 else/setdsp~;
#X obj 71 298 else/out~;
#X text 51 29 [envgen~] has a right outlet that sends a status value (1 when the envelope starts and 0 when it ends). This can be useful for different things \, but particularly to turn on and off the DSP processing of a subpatch or abstraction with [switch~]., f 62;
#X obj 129 149 bng 18 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X obj 129 188 else/envgen~ 50 1 150 0.6 500 0.6 250 0;
#X obj 345 469 clone;
#X text 323 444 see also:;
#X text 70 416 You should also check try pd's [clone] object for managing polyphonic synths.;
#X text 51 80 This is only pertinent for control triggers \, such as floats and bangs., f 62;
#X connect 1 0 0 0;
#X connect 2 0 7 0;
#X connect 3 0 2 0;
#X connect 4 0 5 0;
#X connect 9 0 10 0;
#X connect 10 0 2 1;
#X connect 10 0 4 0;
#X connect 10 1 1 0;
#X restore 487 187 pd status;
#X text 218 412 - resumes the envelope after being paused, f 53;
#X text 113 355 setgain <float>;
#X text 218 355 - sets overall gain, f 53;
#X obj 6 545 cnv 3 550 3 empty empty flags 8 12 0 13 #dcdcdc #000000 0;
#X text 101 441 retrigger <float>;
#X text 218 441 - retrigger time in ms, f 53;
#X text 119 455 legato <float>;
#X text 218 455 - non-0 sets to legato mode, f 53;
#X text 107 426 suspoint <float>;
#X text 218 426 - sets sustain point, f 53;
#X text 167 370 attack;
#X text 218 250 - attacks the envelope with the last gate on value, f 53;
#X text 161 384 release;
#N canvas 382 99 897 458 basic 0;
#X msg 496 100 pause;
#X msg 539 100 resume;
#X obj 589 99 bng 18 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X obj 637 236 vsl 20 80 0 1 0 0 empty empty empty 0 -9 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 637 206 else/sig2float~;
#X text 661 307 0;
#X text 660 232 1;
#X obj 531 228 *~;
#X obj 531 266 else/out~;
#X obj 503 167 osc~ 440;
#X obj 589 175 else/envgen~ 0 1000 1 500 0;
#X text 618 82 ADSR (attack \, decay \, sustain \, release);
#X text 751 126 AR (attack \, release);
#X obj 36 289 else/sig2float~;
#X obj 36 317 vsl 18 100 0 1 0 0 empty empty empty 0 -9 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 36 185 tgl 17 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000 0 1;
#X text 140 237 start \, duration \, target;
#X text 116 209 duration \, target;
#X obj 316 242 else/sig2float~;
#X obj 316 275 vsl 18 100 0 1 0 0 empty empty empty 0 -9 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 316 163 bng 18 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X obj 189 331 else/setdsp~;
#X text 62 411 0;
#X text 61 312 1;
#X text 342 369 0;
#X text 341 270 1;
#X obj 36 262 else/envgen~ 0.5;
#X text 25 85 But if you have an odd number of elements \, the first float sets a staring point. In practical terms \, it's like this number is a target paired with a "0" duration value., f 36;
#X text 262 25 If you give [envgen~] just a float as the argument \, it initializes the object to output that value as a starting point. You can also use the -init flag instead., f 34;
#X text 262 95 Being an all purpose line/envelope generator \, you can use it to create complex envelope lines as below., f 35;
#X text 25 24 The line segments in [envgen~] are set in pairs of duration (in ms) and target value (this is the opposite order of the [line] family of objects in Pd Vanilla)., f 36;
#X obj 738 346 vsl 20 80 -1 1 0 0 empty empty empty 0 -9 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 738 316 else/sig2float~;
#X text 761 342 1;
#X obj 738 289 else/envgen~;
#X text 762 417 -1;
#X msg 738 250 -1 200 1 200 0 200 0.5 100 1 400 -1, f 18;
#X msg 748 154 0 1000 1 500 0;
#X text 654 155 set envelope =>;
#X obj 316 195 else/envgen~ -init 0.5 0 1000 1 250 0.25 250 0.25 500 1 250 1 250 0, f 22;
#X msg 36 210 500 \$1 \, bang;
#X msg 47 237 0 1000 1 \, bang;
#X text 26 146 A list only sets the envelope. You need a bang to run the envelope., f 36;
#X text 517 25 You can pause the envelope at any point with the "pause" message \, after which the "resume" message restarts the envelope., f 46;
#X msg 615 100 100 1 100 0.6 1000 0.6 500 0 \, bang;
#X msg 623 126 0 1000 1 500 0 \, bang;
#X text 399 347 The [envgen~] object works also as an all purpose line generator such as [vline~]. This means you can have multiple line segments and in any range. Note that the maximum number of segments is 256! Use multiple messages and use the right outlet bang to change them if you need more than that., f 45;
#X connect 0 0 10 0;
#X connect 1 0 10 0;
#X connect 2 0 10 0;
#X connect 4 0 3 0;
#X connect 7 0 8 0;
#X connect 9 0 7 0;
#X connect 10 0 4 0;
#X connect 10 0 7 1;
#X connect 13 0 14 0;
#X connect 15 0 40 0;
#X connect 18 0 19 0;
#X connect 20 0 39 0;
#X connect 26 0 13 0;
#X connect 32 0 31 0;
#X connect 34 0 32 0;
#X connect 36 0 34 0;
#X connect 39 0 18 0;
#X connect 40 0 26 0;
#X connect 41 0 26 0;
#X connect 44 0 10 0;
#X connect 45 0 10 0;
#X restore 492 69 pd basic;
#X obj 178 137 *~;
#X obj 178 168 else/out~;
#X obj 178 99 osc~ 440;
#X obj 246 81 bng 17 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X obj 306 158 vsl 18 58 0 1 0 0 empty empty empty 0 -9 0 10 #dcdcdc #000000 #000000 0 1;
#X text 326 208 0;
#X text 327 152 1;
#N canvas 484 132 770 535 gate-sustain 0;
#X obj 78 249 else/display;
#X obj 178 347 *~;
#X obj 78 283 mtof;
#X obj 92 316 else/bl.vsaw~;
#X obj 193 302 else/envgen~ 10 1 40 0.5 400 0.5 50 0, f 19;
#X text 24 241 MIDI Pitch =>, f 8;
#X obj 503 245 else/rescale;
#X obj 503 273 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 488 381 *~;
#X obj 398 274 mtof;
#X obj 193 180 else/tempo 60 50;
#X obj 193 144 tgl 18 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000 0 1;
#X text 213 145 <= generate random notes, f 12;
#X obj 193 251 else/display 6;
#X obj 117 284 osc~ 0.5;
#X text 29 30 A non-zero input triggers the envelope as a "gate on" message and sets an overall gain (which is 1 by default). A zero value is ignored if there's no sustain point., f 57;
#X text 392 25 When you set a sustain point \, with the sustain message or flag \, then [envgen~] holds at the given point until it receives a 0 or release message., f 39;
#X text 30 69 By default \, [envgen~] has no sustain point \, which means it also doesn't have a release ramp and generates the whole envelope at "one-shot" when triggered., f 57;
#X text 251 253 <= gain (gate on);
#X obj 178 376 else/plate.rev~ 50 0.75 0.5 0.5 0.5, f 18;
#X obj 488 410 else/plate.rev~ 50 0.75 0.5 0.5 0.5, f 18;
#X obj 78 220 else/rand.i 36 72;
#X obj 193 219 else/rand.f 0.25 1;
#X obj 498 461 else/out~;
#X obj 186 429 else/out~;
#X text 392 81 Here's [envgen~] as an ADSR envelope:, f 39;
#X obj 398 115 else/keyboard 17 80 2 4 0 0 empty empty;
#X obj 398 305 else/bl.tri~;
#X obj 398 215 unpack float float;
#X obj 503 328 else/envgen~ -suspoint 2 10 1 40 0.5 50 0, f 24;
#X obj 578 275 bng 21 250 50 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000;
#X text 611 264 You can also retrigger with a bang when sustained, f 14;
#X connect 0 0 2 0;
#X connect 1 0 19 0;
#X connect 2 0 3 0;
#X connect 3 0 1 0;
#X connect 4 0 1 1;
#X connect 6 0 7 0;
#X connect 7 0 29 0;
#X connect 8 0 20 0;
#X connect 9 0 27 0;
#X connect 10 0 21 0;
#X connect 10 0 22 0;
#X connect 11 0 10 0;
#X connect 13 0 4 0;
#X connect 14 0 3 1;
#X connect 19 0 24 0;
#X connect 19 1 24 1;
#X connect 20 0 23 0;
#X connect 20 1 23 1;
#X connect 21 0 0 0;
#X connect 22 0 13 0;
#X connect 26 0 28 0;
#X connect 27 0 8 0;
#X connect 28 0 9 0;
#X connect 28 1 6 0;
#X connect 29 0 8 1;
#X connect 30 0 29 0;
#X restore 451 146 pd gate-sustain;
#N canvas 267 107 1028 416 legato-retrigger 0;
#X obj 73 222 *~;
#X obj 51 170 osc~ 440;
#X obj 192 209 else/sig2float~;
#X obj 192 242 vsl 18 100 0 0.5 0 0 empty empty empty 0 -9 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 131 117 bng 20 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X obj 73 272 else/out~;
#X text 158 120 <= click multiple times, f 24;
#X obj 131 158 else/envgen~ 100 1 300 0.25 1000 0.25 500 0, f 18;
#X obj 399 246 *~;
#X obj 377 194 osc~ 440;
#X obj 517 242 else/sig2float~;
#X obj 517 275 vsl 18 100 0 0.5 0 0 empty empty empty 0 -9 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 457 141 bng 20 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X obj 399 296 else/out~;
#X text 484 144 <= click multiple times;
#X obj 457 182 else/envgen~ 0 100 1 300 0.25 1000 0.25 500 0, f 20;
#X msg 380 142 legato \$1;
#X obj 380 121 tgl 15 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 722 266 *~;
#X obj 700 214 osc~ 440;
#X obj 841 253 else/sig2float~;
#X obj 841 286 vsl 18 100 0 0.5 0 0 empty empty empty 0 -9 0 10 #dcdcdc #000000 #000000 0 1;
#X obj 780 161 bng 20 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X obj 722 316 else/out~;
#X text 807 164 <= click multiple times;
#X msg 693 165 retrigger \$1;
#X obj 693 138 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X text 45 54 An even number of elements makes [envgen~] operate in legato mode \, where retriggering restarts the attack ramp from the current amplitude level - check below., f 42;
#X text 350 29 An odd number of elements sets the first float as a starting point \, where a retrigger restarts from this point. Therefore it doesn't operate in legato mode. But you can force a legato mode with the legato message or flag \, which ignores this first point - try it below., f 46;
#X text 673 24 When not in legato mode \, you can set a retrigger time in ms with the "retrigger" message or flag. This adds an extra ramp to the starting point and is useful if you do not want to play in legato mode but want to avoid clicks. A small amount such as 10 ms is already usually enough for this non legato effect., f 50;
#X obj 780 202 else/envgen~ -retrigger 10 0 100 1 300 0.25 1000 0.25 500 0, f 26;
#X connect 0 0 5 0;
#X connect 1 0 0 0;
#X connect 2 0 3 0;
#X connect 4 0 7 0;
#X connect 7 0 0 1;
#X connect 7 0 2 0;
#X connect 8 0 13 0;
#X connect 9 0 8 0;
#X connect 10 0 11 0;
#X connect 12 0 15 0;
#X connect 15 0 8 1;
#X connect 15 0 10 0;
#X connect 16 0 15 0;
#X connect 17 0 16 0;
#X connect 18 0 23 0;
#X connect 19 0 18 0;
#X connect 20 0 21 0;
#X connect 22 0 30 0;
#X connect 25 0 30 0;
#X connect 26 0 25 0;
#X connect 30 0 18 1;
#X connect 30 0 20 0;
#X restore 427 127 pd legato-retrigger;
#N canvas 542 132 730 572 signal 0;
#X obj 179 192 *~;
#X obj 506 249 *~;
#X obj 398 173 mtof~;
#X obj 521 100 else/randpulse2~ 7;
#X obj 398 202 else/bl.saw~;
#X obj 194 147 else/envgen~ 10 1 40 0.7 400 0.7 50 0, f 19;
#X text 22 21 The [envgen~] object can also be triggered by audio. For a one shot envelope (without sustain points) \, you can use impulses to trigger it., f 57;
#X text 398 21 But a gate is needed for envelopes with sustain points. Note that float input is not ignored when there's a signal connection and can also retrigger the envelope., f 47;
#X obj 179 221 else/plate.rev~ 50 0.75 0.5 0.5 0.5, f 18;
#X obj 506 278 else/plate.rev~ 50 0.75 0.5 0.5 0.5, f 18;
#X obj 69 126 else/rand.i~ 36 72;
#X obj 398 145 else/rand.i~ 36 72;
#X obj 179 264 else/out~;
#X obj 516 328 else/out~;
#X obj 194 77 else/tempo~ -on 60 100;
#X obj 521 168 else/envgen~ -suspoint 2 10 1 40 0.5 50 0, f 24;
#X obj 69 154 else/bl.tri~ -midi;
#X obj 229 398 sig~;
#X obj 229 368 tgl 21 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000 0 1;
#X obj 158 388 noise~;
#X obj 158 425 *~;
#X obj 376 372 bng 21 250 50 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000;
#X obj 376 402 else/impseq~;
#X obj 229 432 else/envgen~ -suspoint 2 50 1 10 0.1 500 0, f 25;
#X text 345 488 When the gate is on \, you can also retrigger the envelope with impulses in the mid inlet., f 32;
#X obj 158 485 else/out~;
#X connect 0 0 8 0;
#X connect 1 0 9 0;
#X connect 2 0 4 0;
#X connect 3 0 11 0;
#X connect 3 0 15 0;
#X connect 4 0 1 0;
#X connect 5 0 0 1;
#X connect 8 0 12 0;
#X connect 8 1 12 1;
#X connect 9 0 13 0;
#X connect 9 1 13 1;
#X connect 10 0 16 0;
#X connect 11 0 2 0;
#X connect 14 0 5 0;
#X connect 14 0 10 0;
#X connect 15 0 1 1;
#X connect 16 0 0 0;
#X connect 17 0 23 0;
#X connect 18 0 17 0;
#X connect 19 0 20 0;
#X connect 20 0 25 0;
#X connect 21 0 22 0;
#X connect 22 0 23 1;
#X connect 23 0 20 1;
#X restore 487 166 pd signal;
#X text 218 236 - gate: on/attack (non-0) or off/release (0), f 53;
#X text 218 384 - same as a gate off, f 53;
#X text 218 370 - same as bang or gate on, f 53;
#N canvas 579 112 482 447 duration 0;
#X obj 37 269 else/setdsp~;
#X obj 140 352 else/envgen~;
#X obj 113 395 print~;
#X obj 113 203 nbx 3 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 113 229 t b f;
#X msg 80 168 0;
#X msg 113 168 1;
#X msg 150 168 2;
#X msg 183 168 3;
#X obj 140 260 else/samps2ms;
#X text 55 15 The time duration is set in ms but is converted to number of samples and is rounded to the nearest integer sample duration. For instance \, durations >= 1.5 and < 2.5 is rounded to 2 samples., f 57;
#X floatatom 140 290 0 0 0 0 - - - 0;
#X text 25 166 samples;
#X text 124 290 ms;
#X text 55 69 A minimum line size is of 2 samples \, meaning that its time duration is 1 sample. Hence \, the line is 2 samples long \, where the first point is the start and it jumps to the target value in the next sample. A line duration of 0 jumps immediately and multiple lines with 0 duration next to each other get ignored (and values less than 0 are clipped to 0).;
#X obj 314 352 else/envgen~;
#X obj 287 395 print~;
#X obj 287 203 nbx 3 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 287 229 t b f;
#X msg 254 168 0;
#X msg 287 168 1;
#X msg 324 168 2;
#X msg 357 168 3;
#X obj 314 260 else/samps2ms;
#X floatatom 314 290 0 0 0 0 - - - 0;
#X text 298 290 ms;
#X msg 314 321 0 \$1 1 \$1 0;
#X msg 140 321 0 \$1 1;
#X connect 1 0 2 0;
#X connect 3 0 4 0;
#X connect 4 0 2 0;
#X connect 4 1 9 0;
#X connect 5 0 3 0;
#X connect 6 0 3 0;
#X connect 7 0 3 0;
#X connect 8 0 3 0;
#X connect 9 0 11 0;
#X connect 11 0 27 0;
#X connect 15 0 16 0;
#X connect 17 0 18 0;
#X connect 18 0 16 0;
#X connect 18 1 23 0;
#X connect 19 0 17 0;
#X connect 20 0 17 0;
#X connect 21 0 17 0;
#X connect 22 0 17 0;
#X connect 23 0 24 0;
#X connect 24 0 26 0;
#X connect 26 0 15 0;
#X connect 27 0 1 0;
#X restore 475 89 pd duration;
#N canvas 726 168 516 457 function 0;
#X obj 134 245 bng 20 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X text 394 166 1;
#X obj 119 334 *~;
#X obj 119 371 else/out~;
#X text 393 262 0;
#X obj 58 283 osc~ 440;
#X obj 185 172 else/function 200 100 empty empty 0 1 220 220 220 50 50 50 0 0 0 0 0 100 1 100 0.5 200 0.5 200 0;
#X text 57 85 Note that [function] always sends an odd number of elements \, so you can use "legato" mode or not \, and also set a retrigger time if you will., f 65;
#X obj 134 291 else/envgen~ -retrigger 10, f 13;
#X obj 185 139 else/initmess 0 100 1 100 0.5 200 0.5 200 0;
#X text 100 186 [function] =>;
#X text 57 33 You can use [function] with [envgen~]. Since [function] is always outputting a list you can plug it directly into [envgen~] to set the envelope. Check the help file of [function] for more details on how it works., f 65;
#X connect 0 0 8 0;
#X connect 2 0 3 0;
#X connect 5 0 2 0;
#X connect 6 0 8 0;
#X connect 8 0 2 1;
#X connect 9 0 6 0;
#X restore 475 206 pd function;
#X obj 246 106 else/envgen~ 1000 1 500 0;
#X text 131 236 float/signal;
#N canvas 742 87 506 636 exponential 0;
#X obj 43 402 cnv 15 398 138 empty empty empty 20 12 0 14 #e0e0e0 #404040 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X array \$0-env 13230 float 0;
#X coords 0 1 13229 0 400 140 1 0 0;
#X restore 42 401 graph;
#X obj 129 359 tabwrite~ \$0-env;
#X obj 102 279 t b a;
#X text 181 199 linear;
#X text 113 564 The following subpatch shows how to create "S" like curves:, f 35;
#N canvas 692 218 467 485 "S"-curves 0;
#X obj 24 317 cnv 15 398 138 empty empty empty 20 12 0 14 #e0e0e0 #404040 0;
#N canvas 1 52 450 300 (subpatch) 0;
#X array \$0-S-curve 4410 float 0;
#X coords 0 1 4409 0 400 140 1 0 0;
#X restore 23 316 graph;
#X text 11 310 1;
#X text 11 442 0;
#X obj 94 223 route bang;
#X obj 151 279 tabwrite~ \$0-S-curve;
#X obj 151 250 else/envgen~;
#X obj 94 13 loadbang;
#X msg 94 38 expl 4 -4 \, 0 50 0.5 50 1 \, bang;
#X msg 99 56 expl -4 4 \, 1 50 0.5 50 0 \, bang;
#X msg 113 80 expl -4 4 \, 0 50 0.5 50 1 \, bang;
#X msg 117 98 expl 4 -4 \, 1 50 0.5 50 0 \, bang;
#X msg 129 123 expl 0.25 -0.25 \, 0 50 0.5 50 1 \, bang;
#X msg 134 141 expl -0.25 0.25 \, 1 50 0.5 50 0 \, bang;
#X msg 137 172 expl -0.25 0.25 \, 0 50 0.5 50 1 \, bang;
#X msg 143 191 expl 0.25 -0.25 \, 1 50 0.5 50 0 \, bang;
#X connect 4 0 5 0;
#X connect 4 0 6 0;
#X connect 4 1 6 0;
#X connect 6 0 5 0;
#X connect 7 0 8 0;
#X connect 8 0 4 0;
#X connect 9 0 4 0;
#X connect 10 0 4 0;
#X connect 11 0 4 0;
#X connect 12 0 4 0;
#X connect 13 0 4 0;
#X connect 14 0 4 0;
#X connect 15 0 4 0;
#X restore 267 583 pd "S"-curves;
#X obj 129 310 else/envgen~ 150 1 150 0, f 12;
#X obj 415 116 else/setdsp~;
#X msg 123 199 expl 1 1;
#X msg 135 222 expl 4 4;
#X msg 140 240 expl -4 -4;
#X obj 303 110 else/rescale;
#X obj 303 132 else/rescale~;
#X text 25 90 The exponential factor is the same as used in [else/rescale] and [else/rescale~]. Check them out as well:;
#X text 25 14 The 'exp' message or flag also sets an exponential factor after the duration value. The 'expl' message sets exponential factors for each segment (by default \, they're "1" (linear). The 'expi' message sets a single exponential factor. For values >= 0 \, it's like raising to the power of the given exponential. Negative values are accepted and offer a mirrored/reversed curve. Check below., f 70;
#X msg 102 176 expi 0 \$1;
#X msg 32 177 expi 1 \$1;
#X floatatom 102 153 5 0 0 0 - - - 0;
#X floatatom 32 154 5 0 0 0 - - - 0;
#X obj 294 362 tabwrite~ \$0-env;
#X obj 294 315 else/envgen~ -exp 150 10 1 150 -10 0, f 18;
#X obj 267 287 t b a;
#X msg 267 238 exp 150 -10 1 150 10 0;
#X msg 280 263 exp 0 150 10 1 150 -10 0;
#X text 322 282 with a start value;
#X text 271 220 no start value;
#X connect 3 0 2 0;
#X connect 3 0 7 0;
#X connect 3 1 7 0;
#X connect 7 0 2 0;
#X connect 9 0 3 0;
#X connect 10 0 3 0;
#X connect 11 0 3 0;
#X connect 16 0 3 0;
#X connect 17 0 3 0;
#X connect 18 0 16 0;
#X connect 19 0 17 0;
#X connect 21 0 20 0;
#X connect 22 0 20 0;
#X connect 22 0 21 0;
#X connect 22 1 21 0;
#X connect 23 0 22 0;
#X connect 24 0 22 0;
#X restore 457 108 pd exponential;
#X obj 306 133 else/s2f~;
#X obj 393 157 sel 0;
#X obj 393 184 bng 17 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X text 413 185 done;
#X obj 393 132 tgl 17 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000 0 1;
#X text 204 599 -;
#X text 151 600 1) list;
#X text 218 599 a float sets an initial output value \, a list of floats sets the envelope (default 0 0), f 44;
#X text 218 315 - sets exponential values for each line segment, f 53;
#X text 137 315 expl <list>;
#X text 143 289 exp <list>;
#X text 218 289 -;
#X text 137 331 expi <f \, f>;
#X text 218 330 -;
#X text 230 330 sets an exponential for a line segment specified by the first float indexed from 0, f 51;
#X text 230 289 sets envelope with an extra exponential element for each segment, f 51;
#X text 268 82 <-- generate envelope;
#X text 8 93 [envgen~] is an envelope (and an all purpose line) generator (here it creates a 1000 ms line to 1 and 500 ms line to 0)., f 26;
#X text 31 167 see also:;
#X obj 29 194 else/function~;
#X obj 85 475 cnv 17 3 17 empty empty 1 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 166 476 signal;
#X text 218 475 - impulses to retrigger the envelope, f 53;
#X text 230 264 sets envelope with pairs of duration & target (if odd number of elements \, first is start point), f 51;
#X text 68 551 -exp <list> sets function with an extra exponential element for each segment | -init <float> (default 0) | -retrigger <float> (default 0) | -legato (sets to legato mode on \, default is off) | -suspoint <float> (default 0), f 78;
#X connect 44 0 45 0;
#X connect 46 0 44 0;
#X connect 47 0 59 0;
#X connect 59 0 44 1;
#X connect 59 0 62 0;
#X connect 59 1 66 0;
#X connect 62 0 48 0;
#X connect 63 0 64 0;
#X connect 66 0 63 0;
