#N canvas 550 86 567 635 10;
#X obj 23 39 cnv 4 4 4 empty empty GUI\ popup\ menu 0 28 2 18 #e0e0e0 #000000 0;
#X obj 305 5 cnv 15 250 40 empty empty empty 12 13 0 18 #7c7c7c #e0e4dc 0;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 100 100;
#X restore 304 4 pd;
#X obj 344 12 cnv 10 10 10 empty empty ELSE 0 15 2 30 #7c7c7c #e0e4dc 0;
#X obj 457 12 cnv 10 10 10 empty empty EL 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 477 12 cnv 10 10 10 empty empty Locus 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 514 12 cnv 10 10 10 empty empty Solus' 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 463 27 cnv 10 10 10 empty empty ELSE 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 501 27 cnv 10 10 10 empty empty library 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 6 236 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 6 518 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 6 602 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020 0;
#X obj 75 243 cnv 17 3 270 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 77 526 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 154 241 float;
#X obj 6 549 cnv 3 550 3 empty empty flags 8 12 0 13 #dcdcdc #000000 0;
#X text 118 256 set <float>;
#X text 195 316 -;
#X text 160 271 bang;
#X text 106 480 send <symbol>;
#X text 88 465 receive <symbol>;
#X text 195 359 - sets size in pixels (default: 50), f 58;
#X text 195 418 -;
#X text 195 440 -;
#X text 195 374 - non zero sets to arc drawing mode (default: 1), f 58;
#X text 195 480 - sets send symbol (default: empty), f 58;
#X text 195 465 - sets receive symbol (default: empty), f 58;
#X text 207 416 sets background color in hexadecimal or RGB list (default: #dfdfdf), f 56;
#X text 207 440 sets foreground color in hexadecimal or RGB list (default: #000000), f 56;
#X text 112 316 load <float>;
#X text 195 389 -;
#X text 207 389 sets arc start value \, no float sets current (default: 0);
#X text 82 331 savestate <float>;
#X text 195 330 - non zero sets to state saving mode, f 58;
#X text 195 344 - non zero sets to loadbang mode, f 58;
#X text 124 345 lb <float>;
#X text 195 404 - non zero sets to square drawing mode (default: 1), f 58;
#X obj 232 162 else/popmenu 40 26 12 #dfdfdf black \  empty empty empty 1 0 -1 0 0 0 0 a b c d e;
#X obj 2 5 cnv 15 301 42 empty empty popmenu 20 20 2 37 #e0e0e0 #000000 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1;
#X restore 2 4 graph;
#X text 278 170 <-- click and choose, f 10;
#X text 195 240 - sets index and outputs, f 58;
#X text 195 255 - sets index (no output), f 58;
#X text 195 271 - outputs selection, f 58;
#X text 207 316 sets load value \, no float sets current (default: -1), f 56;
#X text 88 359 fontsize <float>;
#X text 106 374 width <float>;
#X text 100 389 heigth <float>;
#X text 94 404 outline <float>;
#X text 130 418 bg <list>;
#X text 130 440 fg <list>;
#X text 124 286 add <list>;
#X text 195 286 - add elements to the popup menu, f 58;
#X text 154 301 clear;
#X text 195 301 - clear elements of the popup menu, f 58;
#X text 100 495 label <symbol>;
#X text 159 526 list;
#X text 196 526 - index and selection element;
#X text 97 558 -size <float> | -range <float \, float> | -bg <list> | -fg <list> | -nooutline | -receive <symbol> | -send <symbol> | -load <float> | -savestate | -noloadbang |, f 65;
#X obj 232 201 else/display 4;
#X obj 232 64 bng 18 250 50 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000;
#X msg 262 64 clear \, add a b c d e;
#X obj 273 91 hradio 16 1 0 6 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000 0;
#X obj 273 112 - 1;
#X floatatom 273 133 3 0 0 0 - - - 0;
#X text 276 206 <- index and element;
#X msg 184 64 set 1;
#X text 26 123 [popup] is a popup menu GUI. When you click on it \, you get a popup menu to choose elements from (symbols or float). The output is the element index and element., f 28;
#X text 302 129 '-1' is no selection, f 10;
#X text 195 495 - sets label for no selection (default: ' '), f 58;
#N canvas 844 122 459 436 receive 0;
#X msg 123 215 send empty;
#X msg 154 271 receive empty;
#X text 193 216 or just "send";
#X text 245 271 or just "receive";
#X text 37 94 If you set send/receive names to "empty" then the symbols are cleared and inlet/outlet are shown again (same if you give an actual empty symbol). Note you need to escape dollar signs with backslashes to set send receive names via messages or flags \, but not via properties!, f 57;
#X obj 123 328 else/popmenu 128 26 12 #dfdfdf black \  \$0-popmenu-set \$0-popmenu empty 1 0 3 0 0 0 0 1 2 3 4 5 6 7 8 9 10;
#X msg 102 195 send \\\$0-popmenu;
#X msg 143 248 receive \\\$0-popmenu-set;
#X obj 302 328 r \$0-popmenu;
#X text 37 20 When in edit mode \, [popmenu] shows its inlet/outlet. The inlet will always be hidden if you have a receive symbol \, same with the outlet if you have a send symbol. You can set a send symbol to send messages to a matching [receive] object. A receive symbol makes [send] objects communicate to it., f 58;
#X listbox 302 359 8 0 0 0 - - - 12;
#X connect 0 0 5 0;
#X connect 1 0 5 0;
#X connect 6 0 5 0;
#X connect 7 0 5 0;
#X connect 8 0 10 0;
#X restore 450 192 pd receive send;
#N canvas 664 155 710 532 basic 0;
#X floatatom 133 368 8 0 0 0 - - - 12;
#X obj 46 226 tgl 19 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000 0 1;
#X floatatom 133 190 5 0 127 0 - - - 12;
#X obj 46 200 loadbang;
#X msg 218 192 load 5;
#X msg 227 214 load 0;
#X msg 235 238 load;
#X msg 238 262 savestate 1;
#X msg 238 285 lb 1;
#X text 272 285 loadbang;
#X msg 46 261 outline \$1;
#X obj 110 161 bng 16 250 50 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000;
#X obj 133 325 else/popmenu 128 26 12 #dfdfdf black \  empty empty empty 1 0 3 0 0 0 0 1 2 3 4 5 6 7 8 9 10;
#X floatatom 411 123 5 8 16 0 - - - 12;
#X obj 589 164 else/colors;
#X obj 602 212 else/colors;
#X msg 589 185 bg \$1;
#X obj 501 267 else/popmenu 72 31 16 #ff7656 #ff0040 \  empty empty empty 1 0 3 0 0 0 0 1 2 3 4 5 6 7 8 9 10;
#X msg 411 151 fontsize \$1;
#X floatatom 499 101 5 50 100 0 - - - 12;
#X msg 499 129 width \$1;
#X floatatom 514 153 5 25 100 0 - - - 12;
#X msg 514 181 height \$1;
#X msg 602 233 fg \$1;
#X msg 146 220 set 4;
#X text 24 16 The loaded elements are saved with the patch. A float sets and outputs values \, which get clipped to the index range. A 'set' message only sets the value (no output). In 'loadbang' mode \, the "load value" is loaded output at load time. A 'load' message sets the initial index value. A load message without a float saves the current index as the load value. In 'savestate' mode \, when you save the patch \, the current index value becomes the 'load' value. Note that the [savestate] object is needed if you're using [popmenu] in an abstraction for proper state saving in multiple intancees., f 56;
#X text 26 411 by default \, [popmenu] has an outline with the same background color. Use "outlinee 0" message or the '-nooutline' flag to change the display mode. Note that when you are in edit mode the [popmenu] always shows the outline. Inlets and outlets are hidden in run mode but also appear in edit mode. In edit mode the [popmenu] is disabled. It is also disabled if the patch window is out of focus by the way (this is a tcl/tk thing I guess)., f 53;
#X text 396 16 The 'fontsize' message sets fontsize. The 'bg' and 'fg' parameters set background and foreground color with a hex symbol or a list of RGB values (3 values from 0 to 255). Symbols like "green" \, "white" and "gray70" is also accepted., f 49;
#X text 389 327 Note the clicking on the object and dragging can be problematic. I may change this object just so it uses a different strategy. Now it relies on this canvas for the menubutton which is always up front and if you click on it in edit mode \, you can't move like you regularly can \, while the mouse is held down. Instead it follows the mouse cursor after you release the button \, then you need to use 'esc' key to get rid of it., f 50;
#X text 389 433 For proper displacement \, you need to click outside the menubutton area \, near the outline. Another strategy is to select the object and use arrow keys or select a group of objects that contains the [popmenu] and click on another object to move the group around., f 50;
#X connect 1 0 10 0;
#X connect 2 0 12 0;
#X connect 3 0 1 0;
#X connect 4 0 12 0;
#X connect 5 0 12 0;
#X connect 6 0 12 0;
#X connect 7 0 12 0;
#X connect 8 0 12 0;
#X connect 10 0 12 0;
#X connect 11 0 12 0;
#X connect 12 0 0 0;
#X connect 13 0 18 0;
#X connect 14 0 16 0;
#X connect 15 0 23 0;
#X connect 16 0 17 0;
#X connect 18 0 17 0;
#X connect 19 0 20 0;
#X connect 20 0 17 0;
#X connect 21 0 22 0;
#X connect 22 0 17 0;
#X connect 23 0 17 0;
#X connect 24 0 12 0;
#X restore 491 171 pd basic;
#X connect 37 0 59 0;
#X connect 60 0 37 0;
#X connect 61 0 37 0;
#X connect 62 0 63 0;
#X connect 63 0 64 0;
#X connect 64 0 37 0;
#X connect 66 0 37 0;
