#N canvas 449 43 561 528 10;
#X obj 4 307 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 4 407 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 4 445 cnv 3 550 3 empty empty arguments 8 12 0 13 #dcdcdc #000000 0;
#X obj 4 495 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020 0;
#X obj 102 416 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 102 315 cnv 17 3 34 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 172 315 signal;
#X text 172 416 signal;
#X obj 216 241 else/out~;
#X obj 2 3 cnv 15 301 42 empty empty resonant~ 20 20 2 37 #e0e0e0 #000000 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1;
#X restore 2 3 graph;
#X obj 23 40 cnv 4 4 4 empty empty Bandpass 0 28 2 18 #e0e0e0 #000000 0;
#X obj 169 40 cnv 4 4 4 empty empty filter 0 28 2 18 #e0e0e0 #000000 0;
#X obj 99 40 cnv 4 4 4 empty empty resonant 0 28 2 18 #e0e0e0 #000000 0;
#X obj 102 360 cnv 17 3 17 empty empty 1 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 102 383 cnv 17 3 17 empty empty 2 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 136 360 float/signal;
#X text 136 383 float/signal;
#X text 178 333 clear;
#N canvas 381 136 926 617 filter 0;
#X obj 683 101 hsl 128 15 0.1 100 1 1 empty \$0-Q-set empty -2 -8 0 10 #dcdcdc #000000 #000000 7400 1;
#X obj 615 75 hsl 128 15 20 20000 1 1 empty \$0-Hz-set empty -2 -8 0 10 #dcdcdc #000000 #000000 6800 1;
#X obj 545 111 noise~;
#X obj 545 183 else/out~;
#X text 55 92 y[n] = a0 * x[n] + a2 * x[n-2] + b1 * y[n-1] + b2 * y[n-2];
#X text 61 118 a0 \, a2 \, b1 and b2 are calculated as a function of center frequency 'f' in hz and 'q' as follows \;;
#X obj 680 125 nbx 6 14 0.1 100 0 0 \$0-Q empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 612 101 nbx 6 14 20 20000 0 0 \$0-Hz empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X text 54 46 The equation is from the "Cookbook formulae for audio EQ biquad filter coefficients" by Robert Bristow-Johnsonc [1] \, and it is:;
#X text 632 75 center frequency;
#X text 704 101 resonance (Q);
#X text 53 13 This filter has zeroes fixes at +1 and -1 on the z-plane \, which means both 0Hz and Nyquist are always filtered out.;
#X text 502 18 Change the parameters and check the filter response below. The graph considers a sample rate of 44.1Khz.;
#X text 82 145 omega = f * PI/nyquist \; alphaQ = sin(omega) / (2*q) \; b0 = alphaQ + 1 \; a0 = alphaQ * q / b0 \; a2 = -a0 \; b1 = 2*cos(omega) / b0 \; b2 = (alphaQ - 1) / b0 \;;
#N canvas 169 31 398 275 coeff 0;
#X obj 103 87 r \$0-Hz;
#X obj 173 87 r \$0-Q;
#X obj 87 54 loadbang;
#X obj 87 156 outlet;
#X obj 87 127 else/bicoeff2 resonant 500 1;
#X connect 0 0 4 0;
#X connect 1 0 4 1;
#X connect 2 0 4 0;
#X connect 4 0 3 0;
#X restore 12 284 pd coeff;
#X obj 12 311 else/biplot;
#X text 26 242 [1] found in https://webaudio.github.io/Audio-EQ-Cookbook/audio-eq-cookbook.html, f 80;
#X obj 545 150 else/resonant~, f 23;
#X connect 0 0 6 0;
#X connect 1 0 7 0;
#X connect 2 0 17 0;
#X connect 6 0 17 2;
#X connect 7 0 17 1;
#X connect 14 0 15 0;
#X connect 17 0 3 0;
#X restore 420 195 pd filter formula \; and response;
#X text 220 359 - central frequency in Hertz;
#X text 221 333 - clears filter's memory if you blow it up;
#X text 210 60 (constant skirt);
#X text 221 315 - signal to be filtered or excite the resonator;
#X text 221 416 - resonator/filtered signal;
#X msg 228 184 clear;
#N canvas 466 163 842 448 resonator 0;
#X text 33 14 Resonator:;
#X obj 228 128 noise~;
#X obj 228 182 *~;
#X obj 243 156 else/pulse~ 0.5 0.25;
#X obj 65 218 else/resonant~ 400 1000;
#X obj 228 218 else/resonant~ 700 2000;
#X text 33 43 The Q parameter affecting the gain of the filter makes it so that it acts as a 'resonator' \, where it will resonate at the resonant frequency for a period of time after the input signal has ceased.;
#X text 449 180 Thus \, instead of a 'q' factor \, the resonant parameter can be specified by a decay time \, which is the default parameter for the [resonant~] object.;
#X text 449 233 The decay time is given in "T60" \, which is the time it takes to decay 60 dB. You can convert from decay time to Q and vice versa with a formula implemented in the subpatch below.;
#X obj 554 100 else/out~;
#X obj 554 68 else/resonant~ 1000 1000;
#X obj 554 40 else/dust~ 5;
#X text 642 40 random excitation;
#N canvas 769 150 452 512 T60 0;
#X obj 292 282 else/pi;
#X obj 184 156 / 1000;
#X obj 184 210 expr log(1000) / ($f1 * pi);
#X obj 184 181 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X text 243 182 decay time in seconds;
#X obj 184 239 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X text 246 238 bandwidth in hertz;
#X obj 169 268 /;
#X obj 115 183 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 169 294 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X text 228 292 Q;
#X obj 115 108 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X text 173 107 decay time in milliseconds;
#X obj 115 131 t bang float;
#X text 64 183 center;
#X text 53 203 frequency;
#X obj 154 331 /;
#X obj 154 357 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 142 242 t f f;
#X text 213 358 bandwidth in hertz;
#X obj 154 385 expr log(1000) / ($f1 * pi);
#X obj 154 415 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X text 213 416 decay time in seconds;
#X obj 154 437 * 1000;
#X obj 154 462 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X text 212 461 decay time in milliseconds;
#X obj 33 122 loadbang;
#X msg 33 146 set 1000;
#X msg 115 84 2000;
#X obj 115 60 bng 17 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X text 67 22 Converting from decay time to Q and vice-versa;
#X obj 292 308 v pi;
#X connect 0 0 31 0;
#X connect 1 0 3 0;
#X connect 2 0 5 0;
#X connect 3 0 2 0;
#X connect 5 0 7 1;
#X connect 7 0 9 0;
#X connect 8 0 18 0;
#X connect 9 0 16 1;
#X connect 11 0 13 0;
#X connect 13 0 8 0;
#X connect 13 1 1 0;
#X connect 16 0 17 0;
#X connect 17 0 20 0;
#X connect 18 0 16 0;
#X connect 18 1 7 0;
#X connect 20 0 21 0;
#X connect 21 0 23 0;
#X connect 23 0 24 0;
#X connect 26 0 27 0;
#X connect 27 0 8 0;
#X connect 28 0 11 0;
#X connect 29 0 28 0;
#X restore 567 298 pd T60 and Q conversion;
#X obj 141 256 else/out~;
#X obj 408 390 else/resonator~;
#X text 354 354 For a version of this object that works with 't60' input \, see:, f 31;
#X connect 1 0 2 0;
#X connect 2 0 4 0;
#X connect 2 0 5 0;
#X connect 3 0 2 1;
#X connect 4 0 14 0;
#X connect 5 0 14 1;
#X connect 10 0 9 0;
#X connect 11 0 10 0;
#X restore 457 261 pd resonator;
#X text 148 453 1) float - central frequency in hertz (default 0);
#X obj 305 4 cnv 15 250 40 empty empty empty 12 13 0 18 #7c7c7c #e0e4dc 0;
#X obj 344 11 cnv 10 10 10 empty empty ELSE 0 15 2 30 #7c7c7c #e0e4dc 0;
#X obj 457 11 cnv 10 10 10 empty empty EL 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 477 11 cnv 10 10 10 empty empty Locus 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 514 11 cnv 10 10 10 empty empty Solus' 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 463 26 cnv 10 10 10 empty empty ELSE 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 501 26 cnv 10 10 10 empty empty library 0 6 2 13 #7c7c7c #e0e4dc 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 252 42 1 0 0;
#X restore 304 3 graph;
#X text 30 186 see also:;
#X obj 29 235 else/bandpass~;
#X obj 29 260 else/bicoeff2;
#X floatatom 280 181 5 0 0 0 - - - 0;
#X floatatom 345 181 5 0 0 0 - - - 0;
#X text 285 163 Hz;
#N canvas 835 96 411 574 [bandpass~] 0;
#X text 27 12 If you compare the filter response of both [bandpass~] and [resonant~] \, you may notice how similar they are. In fact \, the only difference is that [bandpass~] will have an automatic gain adjustment so the maximum gain value is constantly at 0 dB!;
#X text 29 91 Therefore \, we can describe [bandpass~] as being a "constant gain filter" \, whereas [resonant~] is a constant skirt filter.;
#X obj 103 136 else/imp~ 1;
#X obj 104 421 else/out~;
#X obj 191 224 else/out~;
#X obj 191 192 else/bandpass~ 1000 1000;
#X text 297 240 <= we hear nothing, f 10;
#X text 220 443 <= we hear the resonance;
#X obj 131 225 else/meter~;
#X obj 42 426 else/meter~;
#X obj 104 384 else/resonant~ 1000 1000;
#X connect 2 0 5 0;
#X connect 2 0 10 0;
#X connect 5 0 4 0;
#X connect 5 0 8 0;
#X connect 10 0 3 0;
#X connect 10 0 9 0;
#X restore 444 228 pd [bandpass~] vs [resonant~];
#X f 14;
#X text 221 383 - Q/resonance;
#X obj 216 157 noise~;
#X obj 216 209 else/resonant~ 500 500;
#X text 356 163 Q;
#X text 148 471 2) float - Q/resonance (default 1), f 49;
#X obj 29 212 else/resonator~;
#X text 75 93 [resonant~] is a bandpass resonator filter like [bandpass~] \, but it doesn't have a maximum dB value of 0 \, so changing the Q increases the gain of the filter. This is basically the same filter as [resonator~] \, which has a t60 parameter instead of 'q'., f 70;
#X connect 25 0 45 0;
#X connect 39 0 45 1;
#X connect 40 0 45 2;
#X connect 44 0 45 0;
#X connect 45 0 8 0;
