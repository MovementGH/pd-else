#N canvas 353 38 567 439 10;
#X obj 2 4 cnv 15 301 42 empty empty knob 20 20 2 37 #e0e0e0 #000000 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1;
#X restore 2 4 graph;
#X obj 23 39 cnv 4 4 4 empty empty GUI\ knob 0 28 2 18 #e0e0e0 #000000 0;
#X obj 305 5 cnv 15 250 40 empty empty empty 12 13 0 18 #7c7c7c #e0e4dc 0;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 100 100;
#X restore 304 4 pd;
#X obj 344 12 cnv 10 10 10 empty empty ELSE 0 15 2 30 #7c7c7c #e0e4dc 0;
#X obj 457 12 cnv 10 10 10 empty empty EL 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 477 12 cnv 10 10 10 empty empty Locus 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 514 12 cnv 10 10 10 empty empty Solus' 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 463 27 cnv 10 10 10 empty empty ELSE 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 501 27 cnv 10 10 10 empty empty library 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 6 201 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 6 288 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 6 408 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020 0;
#X obj 130 211 cnv 17 3 70 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 130 297 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 209 210 float;
#X obj 6 322 cnv 3 550 3 empty empty flags 8 12 0 13 #dcdcdc #000000 0;
#X text 173 224 set <float>;
#X text 209 298 float;
#X text 250 209 - sets and outputs value, f 35;
#X text 250 298 - knob's value;
#X text 189 62 [knob] is a GUI knob.;
#X text 215 238 bang;
#X text 250 238 - outputs value, f 35;
#X text 250 223 - sets value (no output), f 35;
#N canvas 503 145 513 548 basic 0;
#X floatatom 134 364 8 0 0 0 - - - 12;
#X msg 167 269 angle 360;
#X msg 159 249 angle 320;
#X msg 47 250 arc \$1;
#X obj 47 215 tgl 19 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000 0 1;
#X floatatom 134 179 5 0 127 0 - - - 12;
#X msg 285 180 range -10 10;
#X msg 84 217 set 64;
#X obj 134 304 else/knob 50 0 127 0 0 empty empty #dfdfdf #afafaf black 1 0 0 0 1 320 0 0 0 empty empty 0 8 0 0 0 1 0 0 0 0;
#X obj 285 304 else/knob 50 -50 50 0 0 empty empty #7c7c7c #afafaf #ffc7c6 1 0 0 0 1 320 0 0 0 empty empty 0 8 0 0 0 1 0 0 0 0;
#X obj 47 189 loadbang;
#X msg 264 159 range -50 50;
#X msg 297 202 load 5;
#X msg 306 224 load 0;
#X msg 314 248 load;
#X obj 285 364 else/display;
#X msg 352 249 savestate 1;
#X msg 146 204 arcstart 90;
#X msg 153 223 arcstart;
#X msg 231 224 reset;
#X text 39 448 The 'load' message sets the initial value for when the object is loaded. A 'load' message without float saves the current value as the load value. In 'savestate' mode \, when you save the patch \, the current knob's value becomes the 'load' value. Note that the [savestate] object is needed if you use [knob] in an abstraction. In 'loadbang' mode (default) \, the load value is output at load time., f 73;
#X msg 352 272 lb 0;
#X text 390 272 no loadbang;
#X text 345 312 double click restores to arc start state (same as 'reset'), f 21;
#X text 39 407 The 'arcstart' value is where the arc starts \, just 'arcstart' sets the current value as the start value. double clicking on the object restores to the 'arcstart' value \, so does the 'reset' message., f 73;
#X text 42 18 Click and drag or click and use mouse wheel/touchpad scrolling for chaning the knob's value. By default \, the angular range is 320 degrees. The object also draws an 'arc' by default with its own color \, which is useful to display the initial and final position. You can change this with the 'arc' or 'angle' messages \, properties or flags. A full 360 degree is possible and the arc is then useful to differentiate from the fully turned down (background color) to the turned up [knob] (foreground color). The default range is from 0 to 127 \, but you can change that in the same way. A float sets and outputs values \, which get clipped to the [knob]'s range. A 'set' message only sets the value (no output)., f 72;
#X connect 1 0 8 0;
#X connect 2 0 8 0;
#X connect 3 0 8 0;
#X connect 4 0 3 0;
#X connect 5 0 8 0;
#X connect 6 0 9 0;
#X connect 7 0 8 0;
#X connect 8 0 0 0;
#X connect 9 0 15 0;
#X connect 10 0 4 0;
#X connect 11 0 9 0;
#X connect 12 0 9 0;
#X connect 13 0 9 0;
#X connect 14 0 9 0;
#X connect 16 0 9 0;
#X connect 17 0 8 0;
#X connect 18 0 8 0;
#X connect 19 0 9 0;
#X connect 21 0 9 0;
#X restore 398 72 pd basic;
#N canvas 423 34 837 757 activity/number 0;
#X msg 143 317 number \$1;
#X floatatom 143 297 3 0 0 0 - - - 0;
#X obj 143 210 vradio 16 1 0 5 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000 0;
#X text 163 210 never, f 11;
#X text 163 242 when active;
#X text 163 258 when typing;
#X text 163 226 always, f 11;
#X obj 470 162 knob 65 0 100 0 0 \$0-knob-% empty #dfdfdf #7c7c7c black 0 0 0 0 1 320 0 0 0 empty empty 0 8 0 0 0 1 0 0 0 0;
#X obj 471 235 note 54 14 Menlo \$0-set-note-% 0 0 0 0 0 255 255 255 0 1 0.00 %;
#X obj 586 162 knob 65 -12 12 0 0 \$0-knob-st empty #000000 #7c7c7c #ffffff 0 0 25 1 0 320 0 0 0 empty empty 0 8 0 0 0 1 0 0 0 0;
#X obj 567 235 note 117 13 Menlo \$0-set-note-st 0 0 0 0 0 255 255 255 0 1 0 semitones;
#X obj 718 162 knob 65 -100 100 0 0 \$0-knob-pan empty #000000 #202020 #ff0400 0 0 0 0 1 320 0 0 0 empty empty 0 8 0 0 0 1 0 0 0 0;
#X obj 718 235 note 64 14 Menlo \$0-set-note-pan 0 0 0 0 0 255 255 255 0 1 Center;
#N canvas 684 392 668 447 guts 0;
#X obj 269 139 makefilename %.3#g;
#X obj 152 157 moses;
#X obj 269 196 s \$0-set-note-pan;
#X obj 152 182 abs;
#X obj 229 224 makefilename %.3#g;
#X obj 200 144 sel 100;
#X floatatom 77 146 5 0 0 0 - - - 0;
#X obj 77 71 r \$0-knob-pan;
#X msg 76 273 set Center;
#X obj 77 168 select 0;
#X obj 76 348 s \$0-set-note-pan;
#X obj 152 224 sel 100;
#X obj 391 345 s \$0-set-note-pan;
#X msg 269 168 set \$1 R;
#X msg 200 167 set 100 R;
#X msg 229 254 set \$1 L;
#X msg 152 254 set 100 L;
#X floatatom 391 68 5 0 0 0 - - - 0;
#X msg 391 94 underline \$1;
#X obj 391 47 r \$0-knob-pan-active;
#X symbolatom 422 201 10 0 0 0 - - - 0;
#X obj 333 95 sel 0;
#X obj 422 170 r \$0-knob-pan-typing;
#X msg 422 239 set \$1...;
#X msg 93 322 bold 0;
#X obj 93 300 loadbang;
#X obj 37 46 loadbang;
#X msg 37 68 0;
#X obj 77 103 else/quantizer 0.1;
#X connect 0 0 13 0;
#X connect 1 0 3 0;
#X connect 1 1 5 0;
#X connect 3 0 11 0;
#X connect 4 0 15 0;
#X connect 5 0 14 0;
#X connect 5 1 0 0;
#X connect 6 0 9 0;
#X connect 7 0 28 0;
#X connect 8 0 10 0;
#X connect 9 0 8 0;
#X connect 9 1 1 0;
#X connect 11 0 16 0;
#X connect 11 1 4 0;
#X connect 13 0 2 0;
#X connect 14 0 2 0;
#X connect 15 0 12 0;
#X connect 16 0 12 0;
#X connect 17 0 18 0;
#X connect 17 0 21 0;
#X connect 18 0 12 0;
#X connect 19 0 17 0;
#X connect 20 0 23 0;
#X connect 21 0 6 0;
#X connect 22 0 20 0;
#X connect 23 0 12 0;
#X connect 24 0 10 0;
#X connect 25 0 24 0;
#X connect 26 0 27 0;
#X connect 27 0 6 0;
#X connect 28 0 6 0;
#X restore 727 265 pd guts;
#X obj 719 137 note 64 16 Menlo empty 0 255 4 0 0 255 255 255 0 1 Pan;
#X obj 587 137 note 58 14 Menlo empty 0 4 0 255 0 255 131 0 0 1 Shift;
#N canvas 719 437 594 329 guts 0;
#X floatatom 78 109 6 0 0 0 - - - 0;
#X obj 78 64 r \$0-knob-st;
#X obj 159 120 makefilename %.2+d;
#X obj 159 255 s \$0-set-note-st;
#X obj 78 131 select 0;
#X msg 159 146 set \$1 semitones;
#X msg 169 174 set 0 semitones;
#X floatatom 291 135 5 0 0 0 - - - 0;
#X obj 291 160 * 200;
#X msg 291 184 color \$1 0 0;
#X obj 290 42 r \$0-knob-st-active;
#X symbolatom 389 163 10 0 0 0 - - - 0;
#X msg 389 191 set \$1| semitones;
#X obj 389 132 r \$0-knob-st-typing;
#X obj 185 72 sel 0;
#X msg 90 209 bold 0;
#X obj 90 187 loadbang;
#X obj 37 36 loadbang;
#X msg 37 58 0;
#X connect 0 0 4 0;
#X connect 1 0 0 0;
#X connect 2 0 5 0;
#X connect 4 0 6 0;
#X connect 4 1 2 0;
#X connect 5 0 3 0;
#X connect 6 0 3 0;
#X connect 7 0 8 0;
#X connect 8 0 9 0;
#X connect 9 0 3 0;
#X connect 10 0 7 0;
#X connect 10 0 14 0;
#X connect 11 0 12 0;
#X connect 12 0 3 0;
#X connect 13 0 11 0;
#X connect 14 0 0 0;
#X connect 15 0 3 0;
#X connect 16 0 15 0;
#X connect 17 0 18 0;
#X connect 18 0 0 0;
#X restore 600 265 pd guts;
#N canvas 524 151 699 415 guts 0;
#X floatatom 118 160 11 0 0 0 - - - 0;
#X obj 118 98 r \$0-knob-%;
#X obj 385 363 s \$0-set-note-%;
#X floatatom 383 106 5 0 0 0 - - - 0;
#X msg 383 128 bold \$1;
#X obj 435 161 r \$0-knob-%-typing;
#X symbolatom 435 192 10 0 0 0 - - - 0;
#X msg 435 220 set \$1|;
#X obj 141 136 sel 0;
#X obj 85 75 loadbang;
#X msg 85 96 0;
#X msg 521 220 bold 0;
#X obj 521 198 loadbang;
#X obj 118 183 moses 1;
#X msg 239 200 100;
#X obj 118 208 makefilename %.2f;
#X obj 310 178 makefilename %.3#g;
#X obj 239 227 makefilename %d;
#X msg 310 272 set \$1 %;
#X obj 239 178 select 100;
#X obj 383 84 ||;
#X obj 428 38 r \$0-knob-%-active;
#X obj 383 16 r \$0-knob-%-hover;
#X obj 383 60 else/hot;
#X connect 0 0 13 0;
#X connect 1 0 0 0;
#X connect 3 0 4 0;
#X connect 4 0 2 0;
#X connect 5 0 6 0;
#X connect 6 0 7 0;
#X connect 7 0 2 0;
#X connect 8 0 0 0;
#X connect 9 0 10 0;
#X connect 10 0 0 0;
#X connect 11 0 2 0;
#X connect 12 0 11 0;
#X connect 13 0 15 0;
#X connect 13 1 19 0;
#X connect 14 0 17 0;
#X connect 15 0 18 0;
#X connect 16 0 18 0;
#X connect 17 0 18 0;
#X connect 18 0 2 0;
#X connect 19 0 14 0;
#X connect 19 1 16 0;
#X connect 20 0 3 0;
#X connect 20 0 8 0;
#X connect 21 0 23 1;
#X connect 22 0 23 0;
#X connect 23 0 20 0;
#X connect 23 1 20 1;
#X restore 480 265 pd guts;
#X obj 471 137 note 58 14 Menlo empty 0 0 0 0 0 0 0 0 0 1 Wet;
#X obj 291 407 tgl 25 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000 0 1;
#X obj 290 472 else/display;
#X text 436 7 Allowing to display a number can be quite useful to monitor the value from dragging and typing. It's like having a built in attached number box. The Color of the number is the same as the foreground color and you don't have much configuring options other than font size and position., f 65;
#X obj 35 402 else/display;
#X obj 290 442 r \$0-number-typing;
#X obj 291 384 r \$0-number-active;
#X obj 143 383 s \$0-set-number;
#X obj 175 425 else/knob 60 0 127 0 0 \$0-number \$0-set-number #000000 #afafaf #ff0400 0 0 0 0 1 320 0 0 0 empty empty 3 12 7 -15 0 1 0 0 0 0;
#X obj 35 379 r \$0-number;
#X msg 27 263 numbersize \$1 \, numberpos \$2 \$3, f 15;
#X text 11 91 When active \, hitting enter outputs the current value. You can also type a number value and hit enter to set it. When the number is displayed \, you can see the number you're typing followed by '|'. The activity status and numbers you type are sent to receive names that match the send name followed by "-active" and "-typing". Check in the example below \, which has the "\$0-number" send name. The usefulness of this is discussed on the right., f 66;
#X msg 40 236 18 0 64;
#X msg 27 210 12 7 -15;
#X text 455 296 Open the [pd guts] subpatches for details. In the examples above \, we use [makefilename] to format the number value with custom units. You can do something like that for any unit you are controlling on your patch \, like ms \, dB \, hz and whatnot. The first example to the left uses percentage and the number value goes bold when the object is active., f 59;
#X text 455 376 The one in the middle is for transposition and the number label goes red when active. The one to the right is a bit more complex and displays panning values (displaying 'center' in the middle position) and is underlined when active., f 59;
#X text 455 439 In all examples above you can type in values when the knob is active and the [note] objects will display the values because we have receive objects listening to what you type. The value you type is only effective when you press enter.;
#X text 456 492 HINT: You can also use the 'active' send name to configure the knob itself and change its color \, or change the color of the other knobs in your patch so the current knob is highlighted., f 59;
#X obj 143 188 else/initmess 3;
#X obj 259 248 tgl 19 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000 0 1;
#X msg 259 294 readonly \$1;
#X obj 262 319 tgl 19 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000 0 1;
#X msg 262 345 active \$1;
#X obj 35 629 else/knob 50 0 127 0 0 value set-value #dfdfdf #7c7c7c black 1 0 0 0 1 320 0 0 0 empty empty 1 12 6 -15 0 1 0 0 0 0;
#X obj 35 687 else/display;
#X obj 125 652 else/display;
#X obj 125 683 s set-value;
#X obj 125 627 r value-enter;
#X text 225 603 If you have a [receive] object with the address matching the send name followed by "-enter" \, then when you activate the object and hit enter \, this is where the value goes to instead of the outlet. This is needed if you have a complex rescaling mapping for your range. Then you can grab the output and perform the actual scaling before sending it back to the object. See the guts of [level~] and [level.m~] to see this in action., f 39;
#X obj 643 658 knob 80 0 127 0 0 \$0-nav1 \$0-set-nav1 #dfdfdf #7c7c7c black 1 0 0 0 1 320 0 0 0 empty empty 0 12 6 -15 0 1 0 0 0 0;
#X obj 494 583 bng 16 250 50 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000;
#X obj 494 561 r \$0-nav1-tab;
#X obj 732 658 knob 80 0 127 0 0 \$0-nav2 \$0-set-nav2 #dfdfdf #7c7c7c black 1 0 0 0 1 320 0 0 0 empty empty 0 12 6 -15 0 1 0 0 0 0;
#X obj 494 606 else/message \; \$0-set-nav1 active 0 \; \$0-set-nav2 active 1;
#X obj 494 683 bng 16 250 50 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000;
#X obj 494 659 r \$0-nav2-tab;
#X obj 494 706 else/message \; \$0-set-nav2 active 0 \; \$0-set-nav1 active 1;
#X text 594 543 On an activated knob \, if you hit the 'tab' key \, you can send a bang to a send name followed by "-tab"., f 36;
#X text 648 593 Try it below. This allows you to use tab to navigate between knobs., f 27;
#X text 11 7 When you can click on the [knob] it gets activated by showing a tiny center circle. Clicking outside the object or pressing 'esc' deactivates it. When active \, you can use the up/down or left/right arrow keys to increment and decrement values. Note you can press shift before activating the object \, in which case the arrow keys will also increase or decrease in hundredths like if you'd just drag the mouse while clicking., f 66;
#X text 286 188 'readonly' disables all clicking activities and the object only responds to messages to set it. The 'active' message activates or deactivates the object in any case., f 25;
#X text 163 274 when hovering;
#X obj 35 464 else/display;
#X obj 35 441 r \$0-number-hover;
#X text 21 511 There are 5 different modes for number display. The default is '0' \, which never displays it. In mode "1" \, the number is always shown. Mode '2' shows the number value when the object is active. Mode "3" only shows the number when the object is active and you're typing a number. Mode "4" shows the number when you hover over the object and while it is active. A receive name that matches the send name followed by "-hover" outputs hovering status., f 70;
#X text 436 73 For more sophisticated GUI display you can use the [note] object from ELSE \, which can offer you a different font \, a different color and you can also interact with the 'hover' \, 'active' and 'typing' send names to configure the object., f 65;
#X connect 0 0 25 0;
#X connect 1 0 0 0;
#X connect 2 0 1 0;
#X connect 23 0 20 0;
#X connect 24 0 19 0;
#X connect 27 0 22 0;
#X connect 28 0 25 0;
#X connect 30 0 28 0;
#X connect 31 0 28 0;
#X connect 36 0 2 0;
#X connect 37 0 38 0;
#X connect 38 0 25 0;
#X connect 39 0 40 0;
#X connect 40 0 25 0;
#X connect 41 0 42 0;
#X connect 43 0 44 0;
#X connect 45 0 43 0;
#X connect 48 0 51 0;
#X connect 49 0 48 0;
#X connect 52 0 54 0;
#X connect 53 0 52 0;
#X connect 61 0 60 0;
#X restore 414 132 pd activity/number;
#N canvas 367 103 857 668 receive 0;
#X obj 266 380 r \$0-knob;
#X obj 122 363 else/knob 100 0 127 0 0 empty empty #dfdfdf #afafaf black 1 0 0 0 1 360 0 0 0 pitch empty 0 8 0 0 0 1 0 0 0 0;
#X msg 69 177 send \\\$0-knob;
#X msg 90 197 send empty;
#X text 37 20 When in edit mode \, [knob] shows its inlet/outlet. The inlet will always be hidden if you have a receive symbol \, same with the outlet if you have a send symbol. You can set a send symbol above to send messages to a matching [receive] object. A receive symbol makes [send] objects communicate to it., f 57;
#X msg 142 283 receive \\\$0-knob-set;
#X msg 153 306 receive empty;
#X msg 111 228 param pitch;
#X msg 122 249 param empty;
#X obj 266 412 else/display -noflash;
#X obj 122 530 else/display -noflash;
#X text 160 198 or just "send";
#X text 202 248 or just "param";
#X text 244 306 or just "receive";
#X text 37 94 If you set send/receive names to "empty" then the symbols are cleared and inlet/outlet are shown again (same if you give an actual empty symbol). Note you need to escape dollar signs with backslashes to set send receive names via messages or flags \, but not via properties!, f 57;
#X text 88 564 The 'param' message sets a symbol name before the value \, so you can directly control a parameter in an object without the need to pass through a message box. An "empty" symbol clears it., f 40;
#X text 227 476 <-- Unlike iemguis \, [knob] doesn't have a 'label' but you can use [note] for that, f 27;
#X floatatom 484 276 8 0 0 0 - - - 0;
#X obj 484 211 knob 50 0 127 0 0 \$0-knob2 \$0-knob2-set #dfdfdf #7c7c7c black 1 0 0 0 1 320 0 0 0 empty empty 0 8 0 0 0 0 0 0 0 0;
#X floatatom 397 241 7 0 0 0 - - - 0;
#X obj 565 176 bng 21 250 50 0 empty empty empty 0 -12 0 16 #dfdfdf #000000 #000000;
#X obj 397 212 r \$0-knob2;
#X obj 565 147 r \$0-knob2-learn;
#X obj 565 249 else/midi.learn;
#A saved;
#A saved;
#X msg 484 158 learn;
#X obj 635 220 bng 21 250 50 0 empty empty empty 0 -12 0 16 #dfdfdf #000000 #000000;
#X obj 635 187 r \$0-knob2-forget;
#X msg 497 183 forget;
#X obj 467 470 else/knob 50 0 127 0 0 empty empty #dfdfdf #7c7c7c black 1 0 0 0 1 320 0 0 0 empty \$0-x 0 0 0 0 0 0 0 0 0 0;
#X msg 467 415 var \\\$0-x;
#X msg 476 438 var empty;
#X obj 567 437 v \$0-x;
#X obj 623 403 bng 16 250 50 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000;
#X floatatom 567 462 7 0 0 0 - - - 0;
#X obj 569 493 r \$0-x;
#X floatatom 569 514 5 0 0 0 - - - 0;
#X obj 467 392 loadbang;
#X text 400 306 Use "var' to set a variable and send values to variables in [value] or [var] objects. Note that you also can do that if you have a send name that matches a variable name \, but with the 'var' symbol you bypass sending to a [receive] object and just set the variable directly. Like send/receive \, you need to escape dollar signs in messages.;
#X floatatom 467 528 7 0 0 0 - - - 0;
#X text 620 495 [receive] objects don't get the values., f 17;
#X text 643 398 query for the value, f 9;
#X obj 623 434 else/var \$0-x;
#X floatatom 623 462 7 0 0 0 - - - 0;
#X text 413 559 This is particularly useful if you have a 'param' name \, in which case you cannot send values to a [value] object with the same 'send' name \, for instance., f 60;
#X text 413 600 HINT: use [var] with [savestate] objects to save the current state of GUIs.;
#X text 252 460 HINT:;
#X msg 578 222 forget;
#X obj 565 273 s \$0-knob2-set;
#X text 666 248 <-- check;
#X text 684 262 it out;
#X obj 135 474 else/note 74 16 Menlo empty 4 0 0 0 0 223 223 223 1 1 pitch;
#X text 403 14 Use the "learn" message or "Ctrl+Click" ("command+click" on mac) for "MIDI learn". This mechanism sends a bang to a given send name followed by "-learn". Below \, the object has a "\$0-knob2" send name \, so it goes to "\$0-knob2-learn". You can use this to connect to a [midi.learn] object that actually offers a "MIDI Learn" mechanism. Try it below. Anyway \, even if you're not sending values anywhere \, the send name is needed for this. The MIDI forget follows the same mechanism and is triggered by the 'forget' message or "Shift+Ctrl+Click". Note that the shortcuts don't work in 'read only' mode., f 59;
#X connect 0 0 9 0;
#X connect 1 0 10 0;
#X connect 2 0 1 0;
#X connect 3 0 1 0;
#X connect 5 0 1 0;
#X connect 6 0 1 0;
#X connect 7 0 1 0;
#X connect 8 0 1 0;
#X connect 18 0 17 0;
#X connect 20 0 23 0;
#X connect 21 0 19 0;
#X connect 22 0 20 0;
#X connect 23 0 47 0;
#X connect 24 0 18 0;
#X connect 26 0 25 0;
#X connect 26 0 46 0;
#X connect 27 0 18 0;
#X connect 28 0 38 0;
#X connect 29 0 28 0;
#X connect 30 0 28 0;
#X connect 31 0 33 0;
#X connect 32 0 31 0;
#X connect 32 0 41 0;
#X connect 34 0 35 0;
#X connect 36 0 29 0;
#X connect 41 0 42 0;
#X connect 46 0 23 0;
#X restore 396 152 pd receive send param var learn forget;
#X f 21;
#N canvas 499 164 535 587 more-messages 0;
#X text 63 63 size <float>;
#X text 146 21 -;
#X text 69 78 arc <float>;
#X text 39 309 circular <float>;
#X text 57 323 angle <float>;
#X text 51 337 offset <float>;
#X text 57 365 send <symbol>;
#X text 39 351 receive <symbol>;
#X text 69 407 exp <float>;
#X text 57 435 ticks <float>;
#X text 39 449 discrete <float>;
#X text 146 63 - sets size in pixels (default: 50), f 58;
#X text 146 136 -;
#X text 146 205 -;
#X text 51 205 bgcolor <list>;
#X text 146 253 -;
#X text 146 78 - non zero sets to arc drawing mode (default: 1), f 58;
#X text 146 323 - sets angular range value in degrees (default: 320), f 58;
#X text 146 337 - sets angular offset in degrees (default: 0), f 58;
#X text 146 365 - sets send symbol (default: empty), f 58;
#X text 146 351 - sets receive symbol (default: empty), f 58;
#X text 146 407 - sets exponential value (default: 1), f 58;
#X text 146 435 - sets number of ticks (default: 0), f 58;
#X text 146 449 - non zero sets to discrete mode (default: 0), f 58;
#X text 146 309 - non zero sets to circular dragging mode (default: 0), f 58;
#X text 51 253 fgcolor <list>;
#X text 146 228 -;
#X text 45 228 arccolor <list>;
#X text 158 228 sets the arc background color in hexadecimal or RGB list (default: #afafaf);
#X text 158 203 sets background color in hexadecimal or RGB list (default: #dfdfdf), f 56;
#X text 158 253 sets foreground color in hexadecimal or RGB list (default: #000000), f 56;
#X text 63 463 jump <float>;
#X text 146 463 - non zero sets to jump on click mode (default: 0), f 58;
#X text 63 21 load <float>;
#X text 158 21 sets load value \, no float sets current (default: 0), f 56;
#X text 146 93 -;
#X text 158 93 sets arc start value \, no float sets current (default: 0);
#X text 63 135 range <f \, f>;
#X text 158 136 sets lower and upper values (default: 0 \, 127), f 56;
#X text 105 505 learn;
#X text 99 519 forget;
#X text 146 505 - activate a midi learn mechanism, f 58;
#X text 146 519 - activate a midi forget mechanism, f 58;
#X text 51 379 param <symbol>;
#X text 146 379 - sets param symbol (default: empty), f 58;
#X text 146 393 - sets param symbol (default: empty), f 58;
#X text 63 393 var <symbol>;
#X text 51 149 number <float>;
#X text 146 150 -;
#X text 51 175 numbersize <f>;
#X text 146 175 - sets number font size (default: 12), f 58;
#X text 39 189 numberpos <f \, f>;
#X text 146 189 - sets coordinates relative to object (default: 6 \, -15), f 58;
#X text 33 35 savestate <float>;
#X text 146 34 - non zero sets to state saving mode, f 58;
#X text 146 48 - non zero sets to loadbang mode, f 58;
#X text 75 49 lb <float>;
#X text 51 121 square <float>;
#X text 146 121 - non zero sets to square drawing mode (default: 1), f 58;
#X text 69 421 log <float>;
#X text 146 421 - sets to log mode (default: 0), f 58;
#X text 39 93 arcstart <float>;
#X text 39 477 readonly <float>;
#X text 146 477 - non zero sets to read only mode (default: 0), f 58;
#X text 105 107 reset;
#X text 146 107 - resets to arc start value, f 58;
#X text 146 491 - non zero activates \, zero deactivates, f 58;
#X text 51 491 active <float>;
#X text 57 278 theme <float>;
#X text 146 278 - non zero sets to themed mode (default: 1), f 58;
#X text 21 293 transparent <float>;
#X text 146 293 - non zero sets to transparent mode (default: 0), f 58;
#X text 146 533 - increment/decrement values \, like using arrow keys, f 58;
#X text 93 534 inc/dec;
#X text 57 549 shift <float>;
#X text 146 548 - increment/decrement by a given number of steps, f 58;
#X text 158 150 sets number display modes: '0'-never \, '1'-always \, '2'-when active \, '3'-when typing \, '4'-when hovering (default 0);
#X restore 254 263 pd more-messages;
#X text 74 330 -size <float> | -range <float \, float> | -bgcolor <list> | -arccolor <list> | -fgcolor <list> | -arcstart <float> | -noarc | -nosquare | -angle <float> | -circular <float> | -jump | -discrete | -number <float> | -numbersize <float> | -numberpos <f \, f> | -receive <symbol> | -send <symbol> | -param <symbol> | -var <symbol> | -log | -exp <f> | -ticks <float> | -offset <float> | -savestate | -noloadbang | -readonly | -notheme | -transparent, f 77;
#N canvas 568 97 506 632 exp/log 0;
#X obj 40 123 else/knob 90 0 1 4 0 empty empty #9a9f9c #feffc6 #402420 0 0 2 0 0 320 0 0 0 empty empty 0 0 0 0 0 0 1 0 0 0;
#X obj 287 98 else/rescale;
#X floatatom 40 232 11 0 0 0 - - - 12;
#X msg 40 86 exp \$1;
#X floatatom 40 59 5 0 0 0 - - - 0;
#X obj 40 31 else/initmess 4;
#X obj 301 448 else/knob 110 110 1760 1 440 empty empty #202020 #bbbbbb #00faff 0 0 0 0 1 320 0 0 440 empty empty 0 8 0 0 0 0 0 0 0 0;
#X floatatom 301 582 11 0 0 0 - - - 12;
#X obj 93 81 else/rescale -exp 4 0 1, f 12;
#X msg 301 400 log \$1;
#X obj 301 367 tgl 22 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000 0 1;
#X obj 93 60 else/midi.learn;
#A saved;
#A saved;
#X text 369 97 <-- see also;
#X text 201 21 [knob] has an exponential and log feature just like the [rescale] object. For more details \, check the help file of [rescale]. Note that sometimes you may need to use [rescale] as well \, like when knob receives data from MIDI controllers (see example to the left)., f 42;
#X text 166 130 The example to the left has an initial quartic function setting and a range from 0 to 1 (well suited for setting a volume gain \, for instance). There are 2 ticks to indicate start and end position., f 48;
#X obj 301 338 loadbang;
#X text 46 283 In log mode \, the range cannot reach or cross a value of 0! This mode supersedes the 'exp' mode \, so the 'exp' value is ignored., f 68;
#X text 60 398 The log mode is well suited for setting things like frequencies. To the right we have a frequency range that is from 110 to 1760 \, which covers 4 octaves from A2 to A6. The mid point is A4 (440 hz)., f 33;
#X text 166 194 You can change the exp value via message or set via a flag. Note that setting The 'exp' factor to '1' \, '0' or '-1' makes it linear., f 48;
#X text 60 338 You can set to log mode with the 'log' message or flag. You can also set it via the properties window., f 33;
#X msg 360 416 jump \$1;
#X obj 360 375 tgl 22 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000 0 1;
#X text 390 376 <- jump on click, f 9;
#X text 166 235 You can also set to linear via the properties window., f 48;
#X text 60 485 You can see that how when the knob reaches the mid point of the knob you have '440' as the mid value between 110 and 1760! You can also double click to go directly to this mid value. Other usages include a frequency or gain multiplier \, from 0.5 to 2 for instance \, where 1 is the mid point., f 33;
#X connect 0 0 2 0;
#X connect 3 0 0 0;
#X connect 4 0 3 0;
#X connect 5 0 4 0;
#X connect 6 0 7 0;
#X connect 8 0 0 0;
#X connect 9 0 6 0;
#X connect 10 0 9 0;
#X connect 11 0 8 0;
#X connect 15 0 10 0;
#X connect 20 0 6 0;
#X connect 21 0 20 0;
#X restore 462 112 pd exp/log;
#N canvas 351 228 634 371 discrete 0;
#X obj 162 128 tgl 19 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000 0 1;
#X text 181 284 0;
#X text 157 266 1;
#X text 148 237 2;
#X text 152 210 3;
#X text 171 185 4;
#X text 202 178 5;
#X text 230 185 6;
#X text 251 210 7;
#X text 255 237 8;
#X text 245 266 9;
#X text 217 284 10;
#X obj 162 195 else/knob 90 0 10 0 0 \$0-discrete empty #000000 #afafaf #dfdfdf 0 0 11 1 0 320 0 0 0 empty empty 0 8 0 0 0 0 1 0 0 0;
#X obj 419 169 else/knob 125 1 11 0 1 empty empty #7c7c7c #000000 #b3dfde 1 1 11 1 1 320 90 0 1 empty empty 0 8 0 0 0 0 1 0 0 0;
#X msg 419 139 offset \$1;
#X floatatom 419 113 5 0 0 0 - - - 0;
#X obj 162 103 loadbang;
#X obj 93 128 tgl 19 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000 0 1;
#X msg 93 156 ticks \$1;
#X msg 162 156 discrete \$1;
#X text 32 16 You can set to discrete mode with a number of steps and also show tick marks for them as below (where we have 11 steps from 0 to 10 and the numbers are comments). Note that \, when displayed \, the first and last ticks are a bit thicker and wider., f 44;
#X floatatom 419 306 5 0 0 0 - - - 0;
#X floatatom 196 301 3 0 0 0 - \$0-discrete \$0-discrete-set 0;
#X text 35 191 Note that you can also use arrows to navigate the knob and in this case the step change is discrete as well., f 14;
#X text 342 22 Besides the angular range \, you can also set an angle offset to shift the start position. The example below is similar to the above \, but the shift is 90 degrees the motion is circular \, there is an arc and we have the square mode., f 42;
#X connect 0 0 19 0;
#X connect 13 0 21 0;
#X connect 14 0 13 0;
#X connect 15 0 14 0;
#X connect 16 0 0 0;
#X connect 16 0 17 0;
#X connect 17 0 18 0;
#X connect 18 0 12 0;
#X connect 19 0 12 0;
#X restore 388 112 pd discrete;
#N canvas 489 136 699 605 size-square-colors 0;
#X floatatom 96 218 5 50 200 0 - - - 12;
#X msg 96 246 size \$1;
#X obj 166 224 else/colors;
#X msg 166 245 bgcolor \$1;
#X obj 194 317 else/colors;
#X msg 194 338 fgcolor \$1;
#X obj 177 270 else/colors;
#X obj 96 374 else/knob 200 0 127 0 0 empty empty #ffffff #606060 #c00402 1 0 0 0 1 320 0 0 0 empty empty 0 8 0 0 0 1 0 0 0 0;
#X text 66 123 The 'size' message sets size in pixels. The bgcolor \, arccolor and fgcolor parameters set background \, arc background and foreground color with a hex symbol or a list of RGB values (3 values from 0 to 255)., f 35;
#X msg 177 291 arccolor \$1;
#X obj 382 266 s pd;
#X msg 382 210 colors black white blue;
#X obj 366 413 knob 75 0 1 0 0.5 empty empty #dfdfdf #7c7c7c black 1 0 0 0 1 320 0 0 0 empty empty 0 12 6 -15 0 1 0 0 1 0;
#X msg 366 358 theme \$1;
#X obj 366 300 loadbang;
#X obj 366 328 tgl 16 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000 0 1;
#X msg 394 239 colors white black red;
#X text 531 209 Pd's default;
#X text 319 121 You can set the knob to take Pd's color \, which are the colors that loads by default. In the 'theme' mode \, the arc background color and the background color are set to Pd's background color \, and the foreground color (arc and wiper) are set to Pd's foreground color. The select color is applied anyway., f 54;
#X obj 546 404 cnv 16 95 95 empty empty empty 20 12 0 10 #7c7c7c #404040 0;
#X obj 556 413 knob 75 0 1 0 0.5 empty empty #dfdfdf #7c7c7c #aa2435 1 0 0 0 1 320 0 0 0 empty empty 0 12 6 -15 0 1 0 0 0 1;
#X obj 556 300 loadbang;
#X obj 556 328 tgl 16 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000 0 1;
#X msg 556 358 transparent \$1;
#X obj 456 413 knob 75 0 1 0 0.5 empty empty #dfdfdf #7c7c7c #aa2435 1 0 0 0 1 320 0 0 0 empty empty 0 12 6 -15 0 1 0 0 0 1;
#X obj 456 300 loadbang;
#X obj 456 328 tgl 16 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000 0 1;
#X msg 456 358 square \$1;
#X text 324 512 A similar feature is to add transparency to the background. This deactivates the arc background elements so they take either Pd's background or the color of an element behind it like a [cnv] object \, while you can still set the wiper color.;
#X text 92 26 By default \, the knob has an outer square area \, with the same background color. There's a second mode without the square or any outline \, in which the knob circle increases in size. Use the "square 0" message or the '-nosquare' flag to change the display mode. You can also set it via properties. When you don't have the square \, note that when you are in edit mode the [knob] shows just a square outline around as to indicate you're in edit mode and where you can connect the object. Inlets and outlets are hidden in run mode but also appear in edit mode., f 86;
#X obj 27 237 loadbang;
#X obj 27 262 tgl 16 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000 0 1;
#X msg 27 287 square \$1;
#X connect 0 0 1 0;
#X connect 1 0 7 0;
#X connect 2 0 3 0;
#X connect 3 0 7 0;
#X connect 4 0 5 0;
#X connect 5 0 7 0;
#X connect 6 0 9 0;
#X connect 9 0 7 0;
#X connect 11 0 10 0;
#X connect 13 0 12 0;
#X connect 14 0 15 0;
#X connect 15 0 13 0;
#X connect 16 0 10 0;
#X connect 21 0 22 0;
#X connect 22 0 23 0;
#X connect 23 0 20 0;
#X connect 23 0 24 0;
#X connect 25 0 26 0;
#X connect 26 0 27 0;
#X connect 27 0 24 0;
#X connect 27 0 20 0;
#X connect 27 0 12 0;
#X connect 30 0 31 0;
#X connect 31 0 32 0;
#X connect 32 0 7 0;
#X restore 396 92 pd size-square-colors;
#N canvas 584 128 522 559 circular 0;
#X msg 239 231 circular \$1;
#X obj 239 298 else/knob 75 0 127 0 550 empty empty #7c7c7c #afafaf #ff0400 1 2 0 0 1 360 0 0 0 empty empty 0 8 0 0 0 1 0 0 0 0;
#X floatatom 239 383 8 0 0 0 - - - 12;
#X msg 169 220 inc;
#X msg 202 220 dec;
#X text 55 211 The 'inc'/'dec' messages are like using arrow keys, f 17;
#X obj 239 149 vradio 16 1 0 3 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000 0;
#X floatatom 239 207 3 0 0 0 - - - 0;
#X text 218 149 no;
#X text 206 166 loop;
#X text 182 182 infinite;
#X msg 333 240 shift \$1;
#X floatatom 333 216 5 0 0 0 - - - 0;
#X msg 333 190 -1;
#X msg 364 190 1;
#X msg 394 190 3;
#X msg 303 190 -3;
#X floatatom 251 257 5 0 0 0 - - - 0;
#X text 48 18 Besides clicking+dragging/scrolling \, you can use the "inc" and "dec" messages to increase and decrease the rotation by a step. Alternatively \, you can click on the object and use arrow keys. Up/right arrow keys increase and down/left keys decrease. Click and dragging on the [knob] works both in vertical and horizontal axis - dragging down or left decreases values \, while draging up or right increases them. Same is true for mouse wheel/trackpad scrolling in vertical/horizontal axis. If shift is pressed before clicking \, the mouse interaction or arrow keys increment/decrement by a factor of a hundredth., f 65;
#X text 52 424 You can also set the motion to 'circular' and in this case the [knob] follows the angular position of your mouse motion when clicking and dragging. Perhaps is best just to use mouse wheel scrolling \, which is consistent in any case. The 'circular 1' message allows 'looping' and 'circular 2' is 'infinite mode' (where it loops but keeps incrementing). Both circular modes make more sense if the angular range is 360 degrees. Using arrow keys also make it loop around or peform infinite increment. The "shift" message is useful for MIDI input of infinite knob controllers \, that send the delta difference of the rotation. In infinite mode \, a float \, "set" or "load" messages takes whatever input value given., f 74;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 3 0 1 0;
#X connect 4 0 1 0;
#X connect 6 0 7 0;
#X connect 7 0 0 0;
#X connect 11 0 1 0;
#X connect 12 0 11 0;
#X connect 13 0 12 0;
#X connect 14 0 12 0;
#X connect 15 0 12 0;
#X connect 16 0 12 0;
#X connect 17 0 1 0;
#X restore 456 72 pd circular;
#X text 195 114 ----->;
#X text 49 103 Click and drag or click and use mouse wheel/touchpad scrolling. Right click for properties, f 27;
#X floatatom 241 159 7 0 0 0 - - - 12;
#X obj 241 90 else/knob 56 0 127 0 0 empty empty #dfdfdf #7c7c7c #202020 1 0 0 0 1 320 0 0 0 empty empty 0 8 0 0 0 1 0 0 0 0;
#X connect 38 0 37 0;
